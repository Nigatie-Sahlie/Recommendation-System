/* ================ ANIMATION STYLES ================ */

/* ===== Basic Animations ===== */
@keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
}

@keyframes fadeOut {
    from { opacity: 1; }
    to { opacity: 0; }
}

@keyframes slideInDown {
    from {
        transform: translateY(-100%);
        opacity: 0;
    }
    to {
        transform: translateY(0);
        opacity: 1;
    }
}

@keyframes slideInUp {
    from {
        transform: translateY(100%);
        opacity: 0;
    }
    to {
        transform: translateY(0);
        opacity: 1;
    }
}

@keyframes slideInLeft {
    from {
        transform: translateX(-100%);
        opacity: 0;
    }
    to {
        transform: translateX(0);
        opacity: 1;
    }
}

@keyframes slideInRight {
    from {
        transform: translateX(100%);
        opacity: 0;
    }
    to {
        transform: translateX(0);
        opacity: 1;
    }
}

@keyframes bounce {
    0%, 20%, 50%, 80%, 100% { transform: translateY(0); }
    40% { transform: translateY(-20px); }
    60% { transform: translateY(-10px); }
}

@keyframes pulse {
    0% { transform: scale(1); }
    50% { transform: scale(1.05); }
    100% { transform: scale(1); }
}

@keyframes float {
    0%, 100% { transform: translateY(0); }
    50% { transform: translateY(-10px); }
}

@keyframes ripple {
    0% {
        transform: scale(0.8);
        opacity: 1;
    }
    100% {
        transform: scale(2.5);
        opacity: 0;
    }
}

/* ===== Animation Classes ===== */
.animate-fade-in {
    animation: fadeIn var(--transition-medium) forwards;
}

.animate-fade-out {
    animation: fadeOut var(--transition-medium) forwards;
}

.animate-slide-in-down {
    animation: slideInDown var(--transition-medium) forwards;
}

.animate-slide-in-up {
    animation: slideInUp var(--transition-medium) forwards;
}

.animate-slide-in-left {
    animation: slideInLeft var(--transition-medium) forwards;
}

.animate-slide-in-right {
    animation: slideInRight var(--transition-medium) forwards;
}

.animate-bounce {
    animation: bounce 1s infinite;
}

.animate-pulse {
    animation: pulse 2s infinite;
}

.animate-float {
    animation: float 3s ease-in-out infinite;
}

.animate-ripple {
    position: relative;
    overflow: hidden;
}

.animate-ripple::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 5px;
    height: 5px;
    background: rgba(255, 255, 255, 0.5);
    opacity: 0;
    border-radius: 100%;
    transform: scale(1, 1) translate(-50%);
    transform-origin: 50% 50%;
}

.animate-ripple:focus:not(:active)::after {
    animation: ripple 0.6s ease-out;
}

/* ===== Transition Effects ===== */
.transition-all {
    transition: all var(--transition-medium);
}

.transition-colors {
    transition: background-color var(--transition-fast), border-color var(--transition-fast), color var(--transition-fast);
}

.transition-opacity {
    transition: opacity var(--transition-fast);
}

.transition-transform {
    transition: transform var(--transition-medium);
}

.transition-shadow {
    transition: box-shadow var(--transition-fast);
}

/* ===== Hover Effects ===== */
.hover-grow {
    transition: transform var(--transition-medium);
}

.hover-grow:hover {
    transform: scale(1.05);
}

.hover-shrink {
    transition: transform var(--transition-medium);
}

.hover-shrink:hover {
    transform: scale(0.95);
}

.hover-rotate {
    transition: transform var(--transition-medium);
}

.hover-rotate:hover {
    transform: rotate(5deg);
}

.hover-underline {
    position: relative;
}

.hover-underline::after {
    content: '';
    position: absolute;
    bottom: -2px;
    left: 0;
    width: 0;
    height: 2px;
    background: currentColor;
    transition: width var(--transition-fast);
}

.hover-underline:hover::after {
    width: 100%;
}

/* ===== Component Animations ===== */
/* Button Wave Effect */
.btn-wave {
    position: relative;
    overflow: hidden;
}

.btn-wave::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 5px;
    height: 5px;
    background: rgba(255, 255, 255, 0.5);
    opacity: 0;
    border-radius: 100%;
    transform: scale(1, 1) translate(-50%);
    transform-origin: 50% 50%;
}

.btn-wave:focus:not(:active)::after {
    animation: ripple 0.6s ease-out;
}

/* Card Lift Effect */
.card-lift {
    transition: transform var(--transition-medium), box-shadow var(--transition-medium);
}

.card-lift:hover {
    transform: translateY(-5px);
    box-shadow: var(--shadow-lg);
}

/* Icon Pulse Effect */
.icon-pulse {
    animation: pulse 2s infinite;
}

.icon-pulse:hover {
    animation: none;
    transform: scale(1.1);
}

/* Loading Spinner */
.spinner {
    width: 40px;
    height: 40px;
    border: 4px solid rgba(0, 0, 0, 0.1);
    border-left-color: var(--primary-500);
    border-radius: 50%;
    animation: spin 1s linear infinite;
}

@keyframes spin {
    to { transform: rotate(360deg); }
}

/* Progress Bar Animation */
.progress-bar {
    animation: progress-animation 2s ease-in-out forwards;
}

@keyframes progress-animation {
    from { width: 0%; }
    to { width: 100%; }
}

/* Count Up Animation */
.count-up {
    animation: count-up 2s ease-out forwards;
}

@keyframes count-up {
    from { opacity: 0; transform: translateY(20px); }
    to { opacity: 1; transform: translateY(0); }
}

/* Text Typing Effect */
.typing-effect {
    overflow: hidden;
    border-right: 2px solid var(--primary-500);
    white-space: nowrap;
    animation: typing 3.5s steps(40, end), blink-caret 0.75s step-end infinite;
}

@keyframes typing {
    from { width: 0 }
    to { width: 100% }
}

@keyframes blink-caret {
    from, to { border-color: transparent }
    50% { border-color: var(--primary-500); }
}

/* Floating Elements */
.floating {
    animation: floating 3s ease-in-out infinite;
}

@keyframes floating {
    0%, 100% { transform: translateY(0); }
    50% { transform: translateY(-10px); }
}

/* Gradient Background Animation */
.animated-gradient {
    background: linear-gradient(-45deg, 
        var(--primary-500), 
        var(--primary-400), 
        var(--primary-600), 
        var(--primary-500));
    background-size: 400% 400%;
    animation: gradient 15s ease infinite;
}

@keyframes gradient {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
}

/* ===== Page Transitions ===== */
.page-enter-active,
.page-leave-active {
    transition: opacity 0.3s, transform 0.3s;
}

.page-enter,
.page-leave-to {
    opacity: 0;
    transform: translateY(10px);
}

/* ===== Scroll Animations ===== */
[data-animate] {
    opacity: 0;
    transform: translateY(20px);
    transition: all var(--transition-medium);
}

[data-animate].animate {
    opacity: 1;
    transform: translateY(0);
}

/* ===== Complex Animations ===== */
/* 3D Flip Card */
.flip-card {
    perspective: 1000px;
}

.flip-card-inner {
    position: relative;
    width: 100%;
    height: 100%;
    transition: transform 0.6s;
    transform-style: preserve-3d;
}

.flip-card:hover .flip-card-inner {
    transform: rotateY(180deg);
}

.flip-card-front,
.flip-card-back {
    position: absolute;
    width: 100%;
    height: 100%;
    backface-visibility: hidden;
}

.flip-card-back {
    transform: rotateY(180deg);
}

/* Parallax Effect */
.parallax {
    background-attachment: fixed;
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
}

/* Glitch Effect */
.glitch {
    position: relative;
}

.glitch::before,
.glitch::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0.8;
}

.glitch::before {
    color: #0ff;
    z-index: -1;
    animation: glitch-effect 3s infinite;
}

.glitch::after {
    color: #f0f;
    z-index: -2;
    animation: glitch-effect 2s infinite reverse;
}

@keyframes glitch-effect {
    0% { transform: translate(0); }
    20% { transform: translate(-3px, 3px); }
    40% { transform: translate(-3px, -3px); }
    60% { transform: translate(3px, 3px); }
    80% { transform: translate(3px, -3px); }
    100% { transform: translate(0); }
}